#!/usr/bin/perl

use strict;
use warnings;

use constant SEGLEN => 64*1024*1024;

sub usage;
sub fatal;

chdir($ENV{'BB_ROOT'} ||= '/var/local/backup') or fatal "chdir $ENV{BB_ROOT}: $!";

usage if @ARGV < 2;
my $t = shift;
my @targets = grep { $_ eq $t || m{^$t/} } all_targets();
my @eum = map { glob("targets/$_/series/*/[0-9]*.eum") } @targets;
fatal "Can't find any targets: $t" if !@eum;
my %seg2tape;
foreach my $f (@ARGV) {
    open my $fh, '-|', 'fgrep', $f, @eum or fatal "fgrep: $!";
    while (<$fh>) {
        if (m{^(targets/(\S+?)/series/(\d+)/(\d[^.]+))\.eum:(.)(.)((?: [a-z*@#]\d+)+) (.+)}) {
            my ($base, $target, $series, $backup, $status, $typechar, $stat, $path) = ($1, $2, $3, $4, $5, $6, $7, $8);
            (my $munged_path = $path) =~ s{^\.[^./]+\./}{/};
            if ($f =~ m{/$}) {
                next if substr($munged_path, 0, length $f) ne $f;
            }
            else {
                next if $munged_path ne $f;
            }
            my $segs = '-';
            if ($status eq '+' && $typechar =~ /[fl]/) {
                $_ = <$fh>;
                last if !defined $_;
                next if !m{^(targets/\S+?/series/\d+/\d[^.]+)\.eum:\^(\d+) \@(\d+) \*(\d+)(?: \#\S+)? (.+)};
                fatal if $1 ne $base;
                my @segs = ($2);
                my $end = $3 + $4;
                (my $mp = $5) =~ s{^\.[^./]+\./}{/};
                fatal if $mp ne $munged_path;
                while ($end > SEGLEN) {
                    push @segs, $segs[-1]+1;
                    $end -= SEGLEN;
                }
                $segs = join(',', @segs);
            }
            printf "%s %s %s %s %s%s%s %s\n", $target, $series, $backup, $segs, $status, $typechar, $stat, $path;
        }
    }
}

# --- Functions

sub seg2tape {
    my ($target, $series, $backup) = @_;
    my $rcpt = sprintf("targets/%s/series/%d/%s.t0receipt", @_);
    return if ! -e $rcpt;
    my %s2t;
    open my $fh, '<', $rcpt or fatal "open $rcpt: $!";
    my ($tape, $filenum);
    while (<$fh>) {
        $tape = $1, $filenum = $2, next if /^T (\S+) filenum (\d+)/;
        $s2t{$1}{$tape}{$filenum} = 1, next if /^B (\d+) begin/;
    }
    return \%s2t;
}

sub all_targets {
    open my $fh, '<', 'targets.list' or fatal "open targets.list: $!";
    my @t;
    while (<$fh>) {
        chomp;
        push @t, $_;
    }
    return @t;
}

sub job {
    my $rcpt = sprintf("targets/%s/series/%d/%s.t0receipt", @_);
    return '-' if ! -e $rcpt;
    open my $fh, '<', $rcpt or fatal "open $rcpt: $!";
    while (<$fh>) {
        return $1 if /^job (\S+)/;
    }
    return '-';
}

sub usage {
    print STDERR "usage: bbfind ...\n";
    exit 1;
}

sub fatal {
    print STDERR "bbfind: $_\n" for @_;
    exit 2;
}

